{"version":3,"sources":["ngx-datetime.umd.js"],"names":["global","factory","exports","module","require","define","amd","ng","ngxDatetime","forms","core","common","this","uniqueId","prefix","id","isDate","obj","Object","prototype","toString","call","CUSTOM_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","NKDatetime","multi","timepickerOptions","datepickerOptions","idDatePicker","idTimePicker","onChange","_","onTouched","defineProperty","get","undefined","tabindex","enumerable","configurable","ngAfterViewInit","_this","setTimeout","init","ngOnDestroy","datepicker","timepicker","ngOnChanges","changes","currentValue","remove","parent","writeValue","value","date","updateModel","clearModels","registerOnChange","fn","registerOnTouched","checkEmptyValue","e","target","timeModel","dateModel","updateDatepicker","showTimepicker","showDatepicker","setDisabledState","isDisabled","readonly","$","options","jQuery","extend","enableOnReadonly","on","newDate","setHours","getHours","setMinutes","getMinutes","setSeconds","getSeconds","defaultTime","_a","time","meridian","hours","parseInt","pad","Date","minutes","seconds","showMeridian","length","decorators","type","Component","args","selector","providers","template","styles","ctorParameters","propDecorators","Input","hasClearButton","required","HostListener","tabindexAttr","HostBinding","NKDatetimeModule","forRoot","ngModule","forChild","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule"],"mappings":"CAAC,SAAUA,OAAQC,SACC,iBAAZC,SAA0C,oBAAXC,OAAyBF,QAAQC,QAASE,QAAQ,kBAAmBA,QAAQ,iBAAkBA,QAAQ,oBAC3H,mBAAXC,QAAyBA,OAAOC,IAAMD,QAAQ,UAAW,iBAAkB,gBAAiB,mBAAoBJ,SACtHA,SAASD,OAAOO,GAAKP,OAAOO,OAAUP,OAAOO,GAAGC,gBAAkBR,OAAOO,GAAGE,MAAMT,OAAOO,GAAGG,KAAKV,OAAOO,GAAGI,QAH7G,CAIEC,KAAM,SAAWV,QAAQO,MAAMC,KAAKC,QAAU,aAkVhD,SAASE,SAASC,QACd,OAAOA,UAAWC,GAMtB,SAASC,OAAOC,KACZ,MAA+C,kBAAxCC,OAAOC,UAAUC,SAASC,KAAKJ;;;;AA/U1C,IAAIK,iBACAC,QAASd,MAAMe,kBACfC,YAAaf,KAAKgB,WAAW,WAAc,OAAOC,aAClDC,OAAO,GAEPD,WAAc,WACd,SAASA,aACLf,KAAKiB,qBACLjB,KAAKkB,qBACLlB,KAAKmB,aAAelB,SAAS,iBAC7BD,KAAKoB,aAAenB,SAAS,iBAC7BD,KAAKqB,SAAW,SAAUC,KAE1BtB,KAAKuB,UAAY,aAmTrB,OAhTAjB,OAAOkB,eAAeT,WAAWR,UAAW,gBACxCkB,IAGA,WACI,YAAyBC,IAAlB1B,KAAK2B,SAAyB,UAAOD,GAEhDE,YAAY,EACZC,cAAc,IAKlBd,WAAWR,UAAUuB,gBAGrB,WACI,IAAIC,MAAQ/B,KACZgC,WAAW,WACPD,MAAME,UAMdlB,WAAWR,UAAU2B,YAGrB,WACQlC,KAAKmC,YACLnC,KAAKmC,WAAWA,WAAW,WAE3BnC,KAAKoC,YACLpC,KAAKoC,WAAWA,WAAW,WAOnCrB,WAAWR,UAAU8B,YAIrB,SAAUC,SACFA,UACIA,QAA2B,mBAAKtC,KAAKmC,aACrCnC,KAAKmC,WAAWA,WAAW,WACvBG,QAA2B,kBAAEC,cAC7BvC,KAAKmC,WAAa,KAClBnC,KAAKiC,SAE8C,IAA9CK,QAA2B,kBAAEC,cAClCvC,KAAKmC,WAAWK,UAGpBF,QAA2B,mBAAKtC,KAAKoC,aACrCpC,KAAKoC,WAAWA,WAAW,UACvBE,QAA2B,kBAAEC,cAC7BvC,KAAKoC,WAAa,KAClBpC,KAAKiC,SAE8C,IAA9CK,QAA2B,kBAAEC,cAClCvC,KAAKoC,WAAWK,SAASD,YASzCzB,WAAWR,UAAUmC,WAIrB,SAAUC,OACF3C,KAAK4C,OAASD,QACd3C,KAAK4C,KAAOD,MACRvC,OAAOJ,KAAK4C,MACZ5C,KAAK6C,YAAY7C,KAAK4C,MAGtB5C,KAAK8C,gBAQjB/B,WAAWR,UAAUwC,iBAIrB,SAAUC,IACNhD,KAAKqB,SAAW2B,IAMpBjC,WAAWR,UAAU0C,kBAIrB,SAAUD,IACNhD,KAAKuB,UAAYyB,IAMrBjC,WAAWR,UAAU2C,gBAIrB,SAAUC,GAEQ,KADeA,EAAEC,OAAOT,SACU,IAA3B3C,KAAKiB,oBACK,IAA3BjB,KAAKkB,mBACe,KAAnBlB,KAAKqD,WAAuC,KAAnBrD,KAAKsD,YAC/BtD,KAAKqB,cAASK,IAOtBX,WAAWR,UAAUuC,YAIrB,SAAUD,aACFA,aACA7C,KAAKqB,cAASK,GAEd1B,KAAKoC,YACLpC,KAAKoC,WAAWA,WAAW,UAAW,MAE1CpC,KAAKuD,iBAAiB,OAK1BxC,WAAWR,UAAUiD,eAGrB,WACIxD,KAAKoC,WAAWA,WAAW,eAK/BrB,WAAWR,UAAUkD,eAGrB,WACIzD,KAAKmC,WAAWA,WAAW,SAM/BpB,WAAWR,UAAUmD,iBAIrB,SAAUC,YACN3D,KAAK4D,SAAWD,YAKpB5C,WAAWR,UAAU0B,KAGrB,WACI,IAAIF,MAAQ/B,KACZ,GAAKA,KAAKmC,aAAyC,IAA3BnC,KAAKkB,mBAgBO,IAA3BlB,KAAKkB,mBACS2C,EAAE,IAAM7D,KAAKmB,cAAgBqB,aAjBM,CACjCsB,QAAUC,OAAOC,QAASC,iBAAkBjE,KAAK4D,UAAY5D,KAAKkB,mBACvFlB,KAAKmC,WAAgC0B,EAAE,IAAM7D,KAAKmB,cAAgBgB,WAAW2B,SAC7E9D,KAAKmC,WACA+B,GAAG,aAAc,SAAUf,GAC5B,IAAqBgB,QAAUhB,EAAEP,KAC7BxC,OAAO2B,MAAMa,OAASxC,OAAO+D,WAE7BA,QAAQC,SAASrC,MAAMa,KAAKyB,YAC5BF,QAAQG,WAAWvC,MAAMa,KAAK2B,cAC9BJ,QAAQK,WAAWzC,MAAMa,KAAK6B,eAElC1C,MAAMa,KAAOuB,QACbpC,MAAMV,SAAS8C,WAMvB,GAAKnE,KAAKoC,aAAyC,IAA3BpC,KAAKiB,mBA0BO,IAA3BjB,KAAKiB,mBACS4C,EAAE,IAAM7D,KAAKoB,cAAgBqB,SAASD,aA3BH,CACtD,IAAqBsB,QAAUC,OAAOC,QAASU,aAAa,GAAS1E,KAAKiB,mBAC1EjB,KAAKoC,WAAgCyB,EAAE,IAAM7D,KAAKoB,cAAgBgB,WAAW0B,SAC7E9D,KAAKoC,WACA8B,GAAG,wBAAyB,SAAUf,GACvC,IAAIwB,GAAKxB,EAAEyB,KAAMC,SAAWF,GAAGE,SAAUC,MAAQH,GAAGG,MAChDD,WAEiB,OAAbA,UAAqBC,MAAQ,KAC7BA,OAAgB,IAEH,OAAbD,UAA+B,KAAVC,QACrBA,OAAgB,IAEpBA,MAAQC,SAAShD,MAAMiD,IAAIF,OAAQ,KAElC1E,OAAO2B,MAAMa,QACdb,MAAMa,KAAO,IAAIqC,KACjBlD,MAAMwB,iBAAiBxB,MAAMa,OAEjCb,MAAMa,KAAKwB,SAASU,OACpB/C,MAAMa,KAAK0B,WAAWnB,EAAEyB,KAAKM,SAC7BnD,MAAMa,KAAK4B,WAAWrB,EAAEyB,KAAKO,SAC7BpD,MAAMV,SAASU,MAAMa,QAMzBxC,OAAOJ,KAAK4C,OACZ5C,KAAK6C,YAAY7C,KAAK4C,OAO9B7B,WAAWR,UAAUsC,YAIrB,SAAUD,MAGN,GAFA5C,KAAKuD,iBAAiBX,WAEElB,IAApB1B,KAAKoC,YAA4BhC,OAAOwC,MAAO,CAC/C,IAAqBkC,MAAQlC,KAAKyB,WAC9BrE,KAAKiB,kBAAkBmE,eAEvBN,MAAmB,IAAVA,OAAyB,KAAVA,MAAgB,GAAKA,MAAQ,IAEzD,IAAqBD,SAAWjC,KAAKyB,YAAc,GAAK,MAAQ,MAC3CO,KAAO5E,KAAKgF,IAAIF,OAAS,IAC1C9E,KAAKgF,IAAIhF,KAAK4C,KAAK2B,cAAgB,IACnCvE,KAAKgF,IAAIhF,KAAK4C,KAAK6B,eAClBzE,KAAKiB,kBAAkBmE,mBAAwD1D,IAAxC1B,KAAKiB,kBAAkBmE,aACzDP,SAAW,IACrB7E,KAAKoC,WAAWA,WAAW,UAAWwC,MACtC5E,KAAKqD,UAAYuB,OAOzB7D,WAAWR,UAAUgD,iBAIrB,SAAUX,WACkBlB,IAApB1B,KAAKmC,YACLnC,KAAKmC,WAAWA,WAAW,SAAUS,OAO7C7B,WAAWR,UAAUyE,IAIrB,SAAUrC,OACN,OAAOA,MAAMnC,WAAW6E,OAAS,EAAI,IAAM1C,MAAQA,MAAMnC,YAE7DO,WAAWuE,aACLC,KAAMzF,KAAK0F,UAAWC,OACZC,SAAU,WACVC,WAAYjF,iBACZkF,SAAU,ulEACVC,QACI,kDAKpB9E,WAAW+E,eAAiB,WAAc,UAC1C/E,WAAWgF,gBACP9E,oBAAwBsE,KAAMzF,KAAKkG,MAAOP,MAAO,gBACjDvE,oBAAwBqE,KAAMzF,KAAKkG,MAAOP,MAAO,gBACjDQ,iBAAqBV,KAAMzF,KAAKkG,MAAOP,MAAO,oBAC9C7B,WAAe2B,KAAMzF,KAAKkG,QAC1BE,WAAeX,KAAMzF,KAAKkG,QAC1BrE,WAAe4D,KAAMzF,KAAKkG,QAC1BzE,YAAgBgE,KAAMzF,KAAKqG,aAAcV,MAAO,UAChDW,eAAmBb,KAAMzF,KAAKuG,YAAaZ,MAAO,oBAE/C1E,WA3TM,GA6TbZ,GAAK,EAoBLmG,iBAAoB,WACpB,SAASA,oBA+CT,OAzCAA,iBAAiBC,QAIjB,WACI,OACIC,SAAUF,iBACVX,eAORW,iBAAiBG,SAIjB,WACI,OACID,SAAUF,iBACVX,eAGRW,iBAAiBhB,aACXC,KAAMzF,KAAK4G,SAAUjB,OACXkB,cACI5F,YAEJzB,SACIyB,YAEJ6F,SACI7G,OAAO8G,aACPhH,MAAMiH,YACNjH,MAAMkH,yBAK1BT,iBAAiBR,eAAiB,WAAc,UACzCQ,iBAhDY,GAmDvBhH,QAAQyB,WAAaA,WACrBzB,QAAQgH,iBAAmBA,iBAE3BhG,OAAOkB,eAAelC,QAAS,cAAgBqD,OAAO","file":"ngx-datetime.umd.min.js.map","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/forms'), require('@angular/core'), require('@angular/common')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/forms', '@angular/core', '@angular/common'], factory) :\n\t(factory((global.ng = global.ng || {}, global.ng.ngxDatetime = {}),global.ng.forms,global.ng.core,global.ng.common));\n}(this, (function (exports,forms,core,common) { 'use strict';\n\n/**\r\n * @license ngx-datetime\r\n * MIT license\r\n */\r\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar CUSTOM_ACCESSOR = {\r\n    provide: forms.NG_VALUE_ACCESSOR,\r\n    useExisting: core.forwardRef(function () { return NKDatetime; }),\r\n    multi: true\r\n};\r\nvar NKDatetime = (function () {\r\n    function NKDatetime() {\r\n        this.timepickerOptions = {};\r\n        this.datepickerOptions = {};\r\n        this.idDatePicker = uniqueId('q-datepicker_');\r\n        this.idTimePicker = uniqueId('q-timepicker_');\r\n        this.onChange = function (_) {\r\n        };\r\n        this.onTouched = function () {\r\n        };\r\n    }\r\n    Object.defineProperty(NKDatetime.prototype, \"tabindexAttr\", {\r\n        get: /**\r\n         * @return {?}\r\n         */\r\n        function () {\r\n            return this.tabindex === undefined ? '-1' : undefined;\r\n        },\r\n        enumerable: true,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.ngAfterViewInit = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        setTimeout(function () {\r\n            _this.init();\r\n        });\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.ngOnDestroy = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        if (this.datepicker) {\r\n            this.datepicker.datepicker('destroy');\r\n        }\r\n        if (this.timepicker) {\r\n            this.timepicker.timepicker('remove');\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.ngOnChanges = /**\r\n     * @param {?} changes\r\n     * @return {?}\r\n     */\r\n    function (changes) {\r\n        if (changes) {\r\n            if (changes['datepickerOptions'] && this.datepicker) {\r\n                this.datepicker.datepicker('destroy');\r\n                if (changes['datepickerOptions'].currentValue) {\r\n                    this.datepicker = null;\r\n                    this.init();\r\n                }\r\n                else if (changes['datepickerOptions'].currentValue === false) {\r\n                    this.datepicker.remove();\r\n                }\r\n            }\r\n            if (changes['timepickerOptions'] && this.timepicker) {\r\n                this.timepicker.timepicker('remove');\r\n                if (changes['timepickerOptions'].currentValue) {\r\n                    this.timepicker = null;\r\n                    this.init();\r\n                }\r\n                else if (changes['timepickerOptions'].currentValue === false) {\r\n                    this.timepicker.parent().remove();\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.writeValue = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        if (this.date !== value) {\r\n            this.date = value;\r\n            if (isDate(this.date)) {\r\n                this.updateModel(this.date);\r\n            }\r\n            else {\r\n                this.clearModels();\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.registerOnChange = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onChange = fn;\r\n    };\r\n    /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.registerOnTouched = /**\r\n     * @param {?} fn\r\n     * @return {?}\r\n     */\r\n    function (fn) {\r\n        this.onTouched = fn;\r\n    };\r\n    /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.checkEmptyValue = /**\r\n     * @param {?} e\r\n     * @return {?}\r\n     */\r\n    function (e) {\r\n        var /** @type {?} */ value = e.target.value;\r\n        if (value === '' && (this.timepickerOptions === false ||\r\n            this.datepickerOptions === false ||\r\n            (this.timeModel === '' && this.dateModel === ''))) {\r\n            this.onChange(undefined);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?=} updateModel\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.clearModels = /**\r\n     * @param {?=} updateModel\r\n     * @return {?}\r\n     */\r\n    function (updateModel) {\r\n        if (updateModel) {\r\n            this.onChange(undefined);\r\n        }\r\n        if (this.timepicker) {\r\n            this.timepicker.timepicker('setTime', null);\r\n        }\r\n        this.updateDatepicker(null);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.showTimepicker = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.timepicker.timepicker('showWidget');\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.showDatepicker = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        this.datepicker.datepicker('show');\r\n    };\r\n    /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.setDisabledState = /**\r\n     * @param {?} isDisabled\r\n     * @return {?}\r\n     */\r\n    function (isDisabled) {\r\n        this.readonly = isDisabled;\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.init = /**\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        var _this = this;\r\n        if (!this.datepicker && this.datepickerOptions !== false) {\r\n            var /** @type {?} */ options = jQuery.extend({ enableOnReadonly: this.readonly }, this.datepickerOptions);\r\n            this.datepicker = (/** @type {?} */ ($('#' + this.idDatePicker))).datepicker(options);\r\n            this.datepicker\r\n                .on('changeDate', function (e) {\r\n                var /** @type {?} */ newDate = e.date;\r\n                if (isDate(_this.date) && isDate(newDate)) {\r\n                    // get hours/minutes\r\n                    newDate.setHours(_this.date.getHours());\r\n                    newDate.setMinutes(_this.date.getMinutes());\r\n                    newDate.setSeconds(_this.date.getSeconds());\r\n                }\r\n                _this.date = newDate;\r\n                _this.onChange(newDate);\r\n            });\r\n        }\r\n        else if (this.datepickerOptions === false) {\r\n            (/** @type {?} */ ($('#' + this.idDatePicker))).remove();\r\n        }\r\n        if (!this.timepicker && this.timepickerOptions !== false) {\r\n            var /** @type {?} */ options = jQuery.extend({ defaultTime: false }, this.timepickerOptions);\r\n            this.timepicker = (/** @type {?} */ ($('#' + this.idTimePicker))).timepicker(options);\r\n            this.timepicker\r\n                .on('changeTime.timepicker', function (e) {\r\n                var _a = e.time, meridian = _a.meridian, hours = _a.hours;\r\n                if (meridian) {\r\n                    // has meridian -> convert 12 to 24h\r\n                    if (meridian === 'PM' && hours < 12) {\r\n                        hours = hours + 12;\r\n                    }\r\n                    if (meridian === 'AM' && hours === 12) {\r\n                        hours = hours - 12;\r\n                    }\r\n                    hours = parseInt(_this.pad(hours), 10);\r\n                }\r\n                if (!isDate(_this.date)) {\r\n                    _this.date = new Date();\r\n                    _this.updateDatepicker(_this.date);\r\n                }\r\n                _this.date.setHours(hours);\r\n                _this.date.setMinutes(e.time.minutes);\r\n                _this.date.setSeconds(e.time.seconds);\r\n                _this.onChange(_this.date);\r\n            });\r\n        }\r\n        else if (this.timepickerOptions === false) {\r\n            (/** @type {?} */ ($('#' + this.idTimePicker))).parent().remove();\r\n        }\r\n        if (isDate(this.date)) {\r\n            this.updateModel(this.date);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.updateModel = /**\r\n     * @param {?} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        this.updateDatepicker(date);\r\n        // update timepicker\r\n        if (this.timepicker !== undefined && isDate(date)) {\r\n            var /** @type {?} */ hours = date.getHours();\r\n            if (this.timepickerOptions.showMeridian) {\r\n                // Convert 24 to 12 hour system\r\n                hours = (hours === 0 || hours === 12) ? 12 : hours % 12;\r\n            }\r\n            var /** @type {?} */ meridian = date.getHours() >= 12 ? ' PM' : ' AM';\r\n            var /** @type {?} */ time = this.pad(hours) + ':' +\r\n                this.pad(this.date.getMinutes()) + ':' +\r\n                this.pad(this.date.getSeconds()) +\r\n                (this.timepickerOptions.showMeridian || this.timepickerOptions.showMeridian === undefined\r\n                    ? meridian : '');\r\n            this.timepicker.timepicker('setTime', time);\r\n            this.timeModel = time; // fix initial empty timeModel bug\r\n        }\r\n    };\r\n    /**\r\n     * @param {?=} date\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.updateDatepicker = /**\r\n     * @param {?=} date\r\n     * @return {?}\r\n     */\r\n    function (date) {\r\n        if (this.datepicker !== undefined) {\r\n            this.datepicker.datepicker('update', date);\r\n        }\r\n    };\r\n    /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    NKDatetime.prototype.pad = /**\r\n     * @param {?} value\r\n     * @return {?}\r\n     */\r\n    function (value) {\r\n        return value.toString().length < 2 ? '0' + value : value.toString();\r\n    };\r\n    NKDatetime.decorators = [\r\n        { type: core.Component, args: [{\r\n                    selector: 'datetime',\r\n                    providers: [CUSTOM_ACCESSOR],\r\n                    template: \"\\n        <div class=\\\"ng2-datetime\\\">\\n            <div [ngClass]=\\\"{ 'input-group': !datepickerOptions.hideIcon, 'date': true }\\\"\\n                 [hidden]=\\\"!datepickerOptions\\\">\\n                <input id=\\\"{{idDatePicker}}\\\" type=\\\"text\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\"\\n                       [attr.readonly]=\\\"readonly || null\\\"\\n                       [attr.required]=\\\"required || null\\\"\\n                       [attr.placeholder]=\\\"datepickerOptions.placeholder || 'Choose date'\\\"\\n                       [attr.tabindex]=\\\"tabindex\\\"\\n                       [(ngModel)]=\\\"dateModel\\\"\\n                       (blur)=\\\"onTouched()\\\"\\n                       (keyup)=\\\"checkEmptyValue($event)\\\"/>\\n                <div [hidden]=\\\"datepickerOptions.hideIcon || datepickerOptions === false\\\"\\n                     (click)=\\\"showDatepicker()\\\"\\n                     class=\\\"input-group-addon\\\">\\n                    <span [ngClass]=\\\"datepickerOptions.icon || 'glyphicon glyphicon-th'\\\"></span>\\n                </div>\\n            </div>\\n            <div [ngClass]=\\\"{ 'input-group': !timepickerOptions.hideIcon, 'bootstrap-timepicker timepicker': true }\\\"\\n                 [hidden]=\\\"!timepickerOptions\\\">\\n                <input id=\\\"{{idTimePicker}}\\\" type=\\\"text\\\" class=\\\"form-control input-small\\\" autocomplete=\\\"off\\\"\\n                       [attr.readonly]=\\\"readonly || null\\\"\\n                       [attr.required]=\\\"required || null\\\"\\n                       [attr.placeholder]=\\\"timepickerOptions.placeholder || 'Set time'\\\"\\n                       [attr.tabindex]=\\\"tabindex\\\"\\n                       [(ngModel)]=\\\"timeModel\\\"\\n                       (focus)=\\\"showTimepicker()\\\"\\n                       (blur)=\\\"onTouched()\\\"\\n                       (keyup)=\\\"checkEmptyValue($event)\\\">\\n                <span [hidden]=\\\"timepickerOptions.hideIcon || false\\\" class=\\\"input-group-addon\\\">\\n                    <i [ngClass]=\\\"timepickerOptions.icon || 'glyphicon glyphicon-time'\\\"></i>\\n                </span>\\n            </div>\\n            <button *ngIf=\\\"hasClearButton\\\" type=\\\"button\\\" (click)=\\\"clearModels(true)\\\">Clear</button>\\n        </div>\\n    \",\r\n                    styles: [\r\n                        '.ng2-datetime *[hidden] { display: none; }'\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NKDatetime.ctorParameters = function () { return []; };\r\n    NKDatetime.propDecorators = {\r\n        \"timepickerOptions\": [{ type: core.Input, args: ['timepicker',] },],\r\n        \"datepickerOptions\": [{ type: core.Input, args: ['datepicker',] },],\r\n        \"hasClearButton\": [{ type: core.Input, args: ['hasClearButton',] },],\r\n        \"readonly\": [{ type: core.Input },],\r\n        \"required\": [{ type: core.Input },],\r\n        \"tabindex\": [{ type: core.Input },],\r\n        \"onTouched\": [{ type: core.HostListener, args: ['blur',] },],\r\n        \"tabindexAttr\": [{ type: core.HostBinding, args: ['attr.tabindex',] },],\r\n    };\r\n    return NKDatetime;\r\n}());\r\nvar id = 0;\r\n/**\r\n * @param {?} prefix\r\n * @return {?}\r\n */\r\nfunction uniqueId(prefix) {\r\n    return prefix + ++id;\r\n}\r\n/**\r\n * @param {?} obj\r\n * @return {?}\r\n */\r\nfunction isDate(obj) {\r\n    return Object.prototype.toString.call(obj) === '[object Date]';\r\n}\n\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar NKDatetimeModule = (function () {\r\n    function NKDatetimeModule() {\r\n    }\r\n    /**\r\n     * Use in AppModule: new instance of SumService.\r\n     * @return {?}\r\n     */\r\n    NKDatetimeModule.forRoot = /**\r\n     * Use in AppModule: new instance of SumService.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            ngModule: NKDatetimeModule,\r\n            providers: []\r\n        };\r\n    };\r\n    /**\r\n     * Use in features modules with lazy loading: new instance of SumService.\r\n     * @return {?}\r\n     */\r\n    NKDatetimeModule.forChild = /**\r\n     * Use in features modules with lazy loading: new instance of SumService.\r\n     * @return {?}\r\n     */\r\n    function () {\r\n        return {\r\n            ngModule: NKDatetimeModule,\r\n            providers: []\r\n        };\r\n    };\r\n    NKDatetimeModule.decorators = [\r\n        { type: core.NgModule, args: [{\r\n                    declarations: [\r\n                        NKDatetime\r\n                    ],\r\n                    exports: [\r\n                        NKDatetime\r\n                    ],\r\n                    imports: [\r\n                        common.CommonModule,\r\n                        forms.FormsModule,\r\n                        forms.ReactiveFormsModule\r\n                    ]\r\n                },] },\r\n    ];\r\n    /** @nocollapse */\r\n    NKDatetimeModule.ctorParameters = function () { return []; };\r\n    return NKDatetimeModule;\r\n}());\n\nexports.NKDatetime = NKDatetime;\nexports.NKDatetimeModule = NKDatetimeModule;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=ngx-datetime.umd.js.map\n"]}