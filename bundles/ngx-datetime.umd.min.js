!function(global,factory){"object"==typeof exports&&"undefined"!=typeof module?factory(exports,require("@angular/forms"),require("@angular/core"),require("@angular/common")):"function"==typeof define&&define.amd?define(["exports","@angular/forms","@angular/core","@angular/common"],factory):factory((global.ng=global.ng||{},global.ng.ngxDatetime={}),global.ng.forms,global.ng.core,global.ng.common)}(this,function(exports,forms,core,common){"use strict";function uniqueId(prefix){return prefix+ ++id}function isDate(obj){return"[object Date]"===Object.prototype.toString.call(obj)}/**
 * @license ngx-datetime
 * MIT license
 */
var CUSTOM_ACCESSOR={provide:forms.NG_VALUE_ACCESSOR,useExisting:core.forwardRef(function(){return NKDatetime}),multi:!0},NKDatetime=function(){function NKDatetime(){this.timepickerOptions={},this.datepickerOptions={},this.idDatePicker=uniqueId("q-datepicker_"),this.idTimePicker=uniqueId("q-timepicker_"),this.onChange=function(_){},this.onTouched=function(){}}return Object.defineProperty(NKDatetime.prototype,"tabindexAttr",{get:function(){return void 0===this.tabindex?"-1":void 0},enumerable:!0,configurable:!0}),NKDatetime.prototype.ngAfterViewInit=function(){var _this=this;setTimeout(function(){_this.init()})},NKDatetime.prototype.ngOnDestroy=function(){this.datepicker&&this.datepicker.datepicker("destroy"),this.timepicker&&this.timepicker.timepicker("remove")},NKDatetime.prototype.ngOnChanges=function(changes){changes&&(changes.datepickerOptions&&this.datepicker&&(this.datepicker.datepicker("destroy"),changes.datepickerOptions.currentValue?(this.datepicker=null,this.init()):!1===changes.datepickerOptions.currentValue&&this.datepicker.remove()),changes.timepickerOptions&&this.timepicker&&(this.timepicker.timepicker("remove"),changes.timepickerOptions.currentValue?(this.timepicker=null,this.init()):!1===changes.timepickerOptions.currentValue&&this.timepicker.parent().remove()))},NKDatetime.prototype.writeValue=function(value){this.date!==value&&(this.date=value,isDate(this.date)?this.updateModel(this.date):this.clearModels())},NKDatetime.prototype.registerOnChange=function(fn){this.onChange=fn},NKDatetime.prototype.registerOnTouched=function(fn){this.onTouched=fn},NKDatetime.prototype.checkEmptyValue=function(e){""===e.target.value&&(!1===this.timepickerOptions||!1===this.datepickerOptions||""===this.timeModel&&""===this.dateModel)&&this.onChange(void 0)},NKDatetime.prototype.clearModels=function(updateModel){updateModel&&this.onChange(void 0),this.timepicker&&this.timepicker.timepicker("setTime",null),this.updateDatepicker(null)},NKDatetime.prototype.showTimepicker=function(){this.timepicker.timepicker("showWidget")},NKDatetime.prototype.showDatepicker=function(){this.datepicker.datepicker("show")},NKDatetime.prototype.setDisabledState=function(isDisabled){this.readonly=isDisabled},NKDatetime.prototype.init=function(){var _this=this;if(this.datepicker||!1===this.datepickerOptions)!1===this.datepickerOptions&&$("#"+this.idDatePicker).remove();else{options=jQuery.extend({enableOnReadonly:this.readonly},this.datepickerOptions);this.datepicker=$("#"+this.idDatePicker).datepicker(options),this.datepicker.on("changeDate",function(e){var newDate=e.date;isDate(_this.date)&&isDate(newDate)&&(newDate.setHours(_this.date.getHours()),newDate.setMinutes(_this.date.getMinutes()),newDate.setSeconds(_this.date.getSeconds())),_this.date=newDate,_this.onChange(newDate)})}if(this.timepicker||!1===this.timepickerOptions)!1===this.timepickerOptions&&$("#"+this.idTimePicker).parent().remove();else{var options=jQuery.extend({defaultTime:!1},this.timepickerOptions);this.timepicker=$("#"+this.idTimePicker).timepicker(options),this.timepicker.on("changeTime.timepicker",function(e){var _a=e.time,meridian=_a.meridian,hours=_a.hours;meridian&&("PM"===meridian&&hours<12&&(hours+=12),"AM"===meridian&&12===hours&&(hours-=12),hours=parseInt(_this.pad(hours),10)),isDate(_this.date)||(_this.date=new Date,_this.updateDatepicker(_this.date)),_this.date.setHours(hours),_this.date.setMinutes(e.time.minutes),_this.date.setSeconds(e.time.seconds),_this.onChange(_this.date)})}isDate(this.date)&&this.updateModel(this.date)},NKDatetime.prototype.updateModel=function(date){if(this.updateDatepicker(date),void 0!==this.timepicker&&isDate(date)){var hours=date.getHours();this.timepickerOptions.showMeridian&&(hours=0===hours||12===hours?12:hours%12);var meridian=date.getHours()>=12?" PM":" AM",time=this.pad(hours)+":"+this.pad(this.date.getMinutes())+":"+this.pad(this.date.getSeconds())+(this.timepickerOptions.showMeridian||void 0===this.timepickerOptions.showMeridian?meridian:"");this.timepicker.timepicker("setTime",time),this.timeModel=time}},NKDatetime.prototype.updateDatepicker=function(date){void 0!==this.datepicker&&this.datepicker.datepicker("update",date)},NKDatetime.prototype.pad=function(value){return value.toString().length<2?"0"+value:value.toString()},NKDatetime.decorators=[{type:core.Component,args:[{selector:"datetime",providers:[CUSTOM_ACCESSOR],template:'\n        <div class="ng2-datetime">\n            <div [ngClass]="{ \'input-group\': !datepickerOptions.hideIcon, \'date\': true }"\n                 [hidden]="!datepickerOptions">\n                <input id="{{idDatePicker}}" type="text" class="form-control" autocomplete="off"\n                       [attr.readonly]="readonly || null"\n                       [attr.required]="required || null"\n                       [attr.placeholder]="datepickerOptions.placeholder || \'Choose date\'"\n                       [attr.tabindex]="tabindex"\n                       [(ngModel)]="dateModel"\n                       (blur)="onTouched()"\n                       (keyup)="checkEmptyValue($event)"/>\n                <div [hidden]="datepickerOptions.hideIcon || datepickerOptions === false"\n                     (click)="showDatepicker()"\n                     class="input-group-addon">\n                    <span [ngClass]="datepickerOptions.icon || \'glyphicon glyphicon-th\'"></span>\n                </div>\n            </div>\n            <div [ngClass]="{ \'input-group\': !timepickerOptions.hideIcon, \'bootstrap-timepicker timepicker\': true }"\n                 [hidden]="!timepickerOptions">\n                <input id="{{idTimePicker}}" type="text" class="form-control input-small" autocomplete="off"\n                       [attr.readonly]="readonly || null"\n                       [attr.required]="required || null"\n                       [attr.placeholder]="timepickerOptions.placeholder || \'Set time\'"\n                       [attr.tabindex]="tabindex"\n                       [(ngModel)]="timeModel"\n                       (focus)="showTimepicker()"\n                       (blur)="onTouched()"\n                       (keyup)="checkEmptyValue($event)">\n                <span [hidden]="timepickerOptions.hideIcon || false" class="input-group-addon">\n                    <i [ngClass]="timepickerOptions.icon || \'glyphicon glyphicon-time\'"></i>\n                </span>\n            </div>\n            <button *ngIf="hasClearButton" type="button" (click)="clearModels(true)">Clear</button>\n        </div>\n    ',styles:[".ng2-datetime *[hidden] { display: none; }"]}]}],NKDatetime.ctorParameters=function(){return[]},NKDatetime.propDecorators={timepickerOptions:[{type:core.Input,args:["timepicker"]}],datepickerOptions:[{type:core.Input,args:["datepicker"]}],hasClearButton:[{type:core.Input,args:["hasClearButton"]}],readonly:[{type:core.Input}],required:[{type:core.Input}],tabindex:[{type:core.Input}],onTouched:[{type:core.HostListener,args:["blur"]}],tabindexAttr:[{type:core.HostBinding,args:["attr.tabindex"]}]},NKDatetime}(),id=0,NKDatetimeModule=function(){function NKDatetimeModule(){}return NKDatetimeModule.forRoot=function(){return{ngModule:NKDatetimeModule,providers:[]}},NKDatetimeModule.forChild=function(){return{ngModule:NKDatetimeModule,providers:[]}},NKDatetimeModule.decorators=[{type:core.NgModule,args:[{declarations:[NKDatetime],exports:[NKDatetime],imports:[common.CommonModule,forms.FormsModule,forms.ReactiveFormsModule]}]}],NKDatetimeModule.ctorParameters=function(){return[]},NKDatetimeModule}();exports.NKDatetime=NKDatetime,exports.NKDatetimeModule=NKDatetimeModule,Object.defineProperty(exports,"__esModule",{value:!0})});