{"version":3,"file":"ngx-datetime.js","sources":["../../src/ng2-datetime/ng2-datetime.ts","../../src/ng2-datetime/ng2-datetime.module.ts"],"sourcesContent":["import {ITimepickerEvent} from './ITimepickerEvent';\r\nimport {ControlValueAccessor, NG_VALUE_ACCESSOR} from '@angular/forms';\r\nimport {AfterViewInit, Component, forwardRef, HostBinding, HostListener, Input, OnChanges, OnDestroy, SimpleChanges} from '@angular/core';\r\n\r\ndeclare var jQuery: any;\r\ndeclare var $: any;\r\n\r\nconst CUSTOM_ACCESSOR = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => NKDatetime),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    selector: 'datetime',\r\n    providers: [CUSTOM_ACCESSOR],\r\n    template: `\r\n        <div class=\"ng2-datetime\">\r\n            <div [ngClass]=\"{ 'input-group': !datepickerOptions.hideIcon, 'date': true }\"\r\n                 [hidden]=\"!datepickerOptions\">\r\n                <input id=\"{{idDatePicker}}\" type=\"text\" class=\"form-control\" autocomplete=\"off\"\r\n                       [attr.readonly]=\"readonly || null\"\r\n                       [attr.required]=\"required || null\"\r\n                       [attr.placeholder]=\"datepickerOptions.placeholder || 'Choose date'\"\r\n                       [attr.tabindex]=\"tabindex\"\r\n                       [(ngModel)]=\"dateModel\"\r\n                       (blur)=\"onTouched()\"\r\n                       (keyup)=\"checkEmptyValue($event)\"/>\r\n                <div [hidden]=\"datepickerOptions.hideIcon || datepickerOptions === false\"\r\n                     (click)=\"showDatepicker()\"\r\n                     class=\"input-group-addon\">\r\n                    <span [ngClass]=\"datepickerOptions.icon || 'glyphicon glyphicon-th'\"></span>\r\n                </div>\r\n            </div>\r\n            <div [ngClass]=\"{ 'input-group': !timepickerOptions.hideIcon, 'bootstrap-timepicker timepicker': true }\"\r\n                 [hidden]=\"!timepickerOptions\">\r\n                <input id=\"{{idTimePicker}}\" type=\"text\" class=\"form-control input-small\" autocomplete=\"off\"\r\n                       [attr.readonly]=\"readonly || null\"\r\n                       [attr.required]=\"required || null\"\r\n                       [attr.placeholder]=\"timepickerOptions.placeholder || 'Set time'\"\r\n                       [attr.tabindex]=\"tabindex\"\r\n                       [(ngModel)]=\"timeModel\"\r\n                       (focus)=\"showTimepicker()\"\r\n                       (blur)=\"onTouched()\"\r\n                       (keyup)=\"checkEmptyValue($event)\">\r\n                <span [hidden]=\"timepickerOptions.hideIcon || false\" class=\"input-group-addon\">\r\n                    <i [ngClass]=\"timepickerOptions.icon || 'glyphicon glyphicon-time'\"></i>\r\n                </span>\r\n            </div>\r\n            <button *ngIf=\"hasClearButton\" type=\"button\" (click)=\"clearModels(true)\">Clear</button>\r\n        </div>\r\n    `,\r\n    styles: [\r\n        '.ng2-datetime *[hidden] { display: none; }'\r\n    ]\r\n})\r\n\r\nexport class NKDatetime implements ControlValueAccessor, AfterViewInit, OnDestroy, OnChanges {\r\n    @Input('timepicker') timepickerOptions: any = {};\r\n    @Input('datepicker') datepickerOptions: any = {};\r\n    @Input('hasClearButton') hasClearButton: boolean;\r\n    @Input() readonly: boolean;\r\n    @Input() required: boolean;\r\n    @Input() tabindex: string;\r\n\r\n    date: Date; // ngModel\r\n    dateModel: string;\r\n    timeModel: string;\r\n\r\n    // instances\r\n    datepicker: any;\r\n    timepicker: any;\r\n\r\n    idDatePicker: string = uniqueId('q-datepicker_');\r\n    idTimePicker: string = uniqueId('q-timepicker_');\r\n\r\n    onChange = (_: any) => {\r\n    };\r\n\r\n    @HostListener('blur')\r\n    onTouched = () => {\r\n    };\r\n\r\n    @HostBinding('attr.tabindex')\r\n    get tabindexAttr(): string | undefined {\r\n        return this.tabindex === undefined ? '-1' : undefined;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.init();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.datepicker) {\r\n            this.datepicker.datepicker('destroy');\r\n        }\r\n        if (this.timepicker) {\r\n            this.timepicker.timepicker('remove');\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes) {\r\n            if (changes['datepickerOptions'] && this.datepicker) {\r\n                this.datepicker.datepicker('destroy');\r\n\r\n                if (changes['datepickerOptions'].currentValue) {\r\n                    this.datepicker = null;\r\n                    this.init();\r\n                } else if (changes['datepickerOptions'].currentValue === false) {\r\n                    this.datepicker.remove();\r\n                }\r\n            }\r\n            if (changes['timepickerOptions'] && this.timepicker) {\r\n                this.timepicker.timepicker('remove');\r\n\r\n                if (changes['timepickerOptions'].currentValue) {\r\n                    this.timepicker = null;\r\n                    this.init();\r\n                } else if (changes['timepickerOptions'].currentValue === false) {\r\n                    this.timepicker.parent().remove();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    writeValue(value: any) {\r\n        if (this.date !== value) {\r\n            this.date = value;\r\n            if (isDate(this.date)) {\r\n                this.updateModel(this.date);\r\n            } else {\r\n                this.clearModels();\r\n            }\r\n        }\r\n    }\r\n\r\n    registerOnChange(fn: (_: any) => void) {\r\n        this.onChange = fn;\r\n    }\r\n\r\n    registerOnTouched(fn: () => void) {\r\n        this.onTouched = fn;\r\n    }\r\n\r\n    checkEmptyValue(e: any) {\r\n        const value = e.target.value;\r\n        if (value === '' && (\r\n                this.timepickerOptions === false ||\r\n                this.datepickerOptions === false ||\r\n                (this.timeModel === '' && this.dateModel === '')\r\n            )) {\r\n            this.onChange(undefined);\r\n        }\r\n    }\r\n\r\n\tclearModels(updateModel?: boolean) {\r\n\t\tif (updateModel) {\r\n\t\t\tthis.onChange(undefined);\r\n\t\t}\r\n        if (this.timepicker) {\r\n            this.timepicker.timepicker('setTime', null);\r\n        }\r\n        this.updateDatepicker(null);\r\n    }\r\n\r\n    showTimepicker() {\r\n        this.timepicker.timepicker('showWidget');\r\n    }\r\n\r\n    showDatepicker() {\r\n        this.datepicker.datepicker('show');\r\n    }\r\n\r\n    setDisabledState(isDisabled: boolean): void {\r\n        this.readonly = isDisabled;\r\n    }\r\n\r\n    //////////////////////////////////\r\n\r\n    private init(): void {\r\n        if (!this.datepicker && this.datepickerOptions !== false) {\r\n            let options = jQuery.extend({enableOnReadonly: this.readonly}, this.datepickerOptions);\r\n            this.datepicker = (<any>$('#' + this.idDatePicker)).datepicker(options);\r\n            this.datepicker\r\n                .on('changeDate', (e: any) => {\r\n                    let newDate: Date = e.date;\r\n\r\n                    if (isDate(this.date) && isDate(newDate)) {\r\n                        // get hours/minutes\r\n                        newDate.setHours(this.date.getHours());\r\n                        newDate.setMinutes(this.date.getMinutes());\r\n                        newDate.setSeconds(this.date.getSeconds());\r\n                    }\r\n\r\n                    this.date = newDate;\r\n                    this.onChange(newDate);\r\n                });\r\n        } else if (this.datepickerOptions === false) {\r\n            (<any>$('#' + this.idDatePicker)).remove();\r\n        }\r\n\r\n        if (!this.timepicker && this.timepickerOptions !== false) {\r\n            let options = jQuery.extend({defaultTime: false}, this.timepickerOptions);\r\n            this.timepicker = (<any>$('#' + this.idTimePicker)).timepicker(options);\r\n            this.timepicker\r\n                .on('changeTime.timepicker', (e: ITimepickerEvent) => {\r\n                    let {meridian, hours} = e.time;\r\n\r\n                    if (meridian) {\r\n                        // has meridian -> convert 12 to 24h\r\n                        if (meridian === 'PM' && hours < 12) {\r\n                            hours = hours + 12;\r\n                        }\r\n                        if (meridian === 'AM' && hours === 12) {\r\n                            hours = hours - 12;\r\n                        }\r\n                        hours = parseInt(this.pad(hours), 10);\r\n                    }\r\n\r\n                    if (!isDate(this.date)) {\r\n                        this.date = new Date();\r\n                        this.updateDatepicker(this.date);\r\n                    }\r\n\r\n                    this.date.setHours(hours);\r\n                    this.date.setMinutes(e.time.minutes);\r\n                    this.date.setSeconds(e.time.seconds);\r\n                    this.onChange(this.date);\r\n                });\r\n        } else if (this.timepickerOptions === false) {\r\n            (<any>$('#' + this.idTimePicker)).parent().remove();\r\n        }\r\n\r\n        if (isDate(this.date)) {\r\n            this.updateModel(this.date);\r\n        }\r\n    }\r\n\r\n    private updateModel(date: Date): void {\r\n        this.updateDatepicker(date);\r\n\r\n        // update timepicker\r\n        if (this.timepicker !== undefined && isDate(date)) {\r\n            let hours = date.getHours();\r\n            if (this.timepickerOptions.showMeridian) {\r\n                // Convert 24 to 12 hour system\r\n                hours = (hours === 0 || hours === 12) ? 12 : hours % 12;\r\n            }\r\n            const meridian = date.getHours() >= 12 ? ' PM' : ' AM';\r\n            const time =\r\n                this.pad(hours) + ':' +\r\n                this.pad(this.date.getMinutes()) + ':' +\r\n                this.pad(this.date.getSeconds()) +\r\n                (this.timepickerOptions.showMeridian || this.timepickerOptions.showMeridian === undefined\r\n                    ? meridian : '');\r\n            this.timepicker.timepicker('setTime', time);\r\n            this.timeModel = time; // fix initial empty timeModel bug\r\n        }\r\n    }\r\n\r\n    private updateDatepicker(date?: any) {\r\n        if (this.datepicker !== undefined) {\r\n            this.datepicker.datepicker('update', date);\r\n        }\r\n    }\r\n\r\n    private pad(value: any): string {\r\n        return value.toString().length < 2 ? '0' + value : value.toString();\r\n    }\r\n}\r\n\r\nlet id = 0;\r\n\r\nfunction uniqueId(prefix: string): string {\r\n    return prefix + ++id;\r\n}\r\n\r\nfunction isDate(obj: any) {\r\n    return Object.prototype.toString.call(obj) === '[object Date]';\r\n}\r\n","import {ModuleWithProviders, NgModule} from '@angular/core';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\nimport {CommonModule} from '@angular/common';\r\nimport {NKDatetime} from './ng2-datetime';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        NKDatetime\r\n    ],\r\n    exports: [\r\n        NKDatetime\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule\r\n    ]\r\n})\r\nexport class NKDatetimeModule {\r\n\r\n    /**\r\n     * Use in AppModule: new instance of SumService.\r\n     */\r\n    public static forRoot(): ModuleWithProviders {\r\n        return {\r\n            ngModule: NKDatetimeModule,\r\n            providers: []\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Use in features modules with lazy loading: new instance of SumService.\r\n     */\r\n    public static forChild(): ModuleWithProviders {\r\n        return {\r\n            ngModule: NKDatetimeModule,\r\n            providers: []\r\n        };\r\n    }\r\n\r\n}\r\n"],"names":[],"mappings":"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"}